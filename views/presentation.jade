script(src='/socket.io/socket.io.js')
script(src='/javascripts/jquery-1.6.1.min.js')
script(type='text/javascript')
  $(function(){     
    var disText = '!Good';
    var likeText = 'Good';
    var queText = 'Question';
    
    var socket = new io.Socket(null, {port: #{port}, rememberTransport:false});
    socket.connect();
    socket.send({'type':'subscribe', 'channel':'#{p_id}'});
    socket.on('message', function(obj){
      var message = obj.msg;
      var countTag;
      var emoticon;
      // count up specific tag count
      switch(message.emotion) {
        case disText: countTag = $(".dis").next().next('.tag-count'); emoticon='dis'; break;
        case likeText: countTag = $(".like").next().next('.tag-count'); emoticon='like'; break;
        case queText: countTag = $(".que").next().next('.tag-count'); emoticon='que'; break;
        default: break;
      }
      var count = countTag.text();
      count++;
      countTag.text(count);
      
      // count up total tag count
      var totalTag = $(".all").next().next('.tag-count');
      count = totalTag.text();
      count++;
      totalTag.text(count);
      
      // set emoticonImg
      var emoticonImgURL = '/images/' + emoticon + '.gif';
      var emoticonImg = '<img class="emoticon" src="' + emoticonImgURL +'"></a>';
      
      // add message
      //$("#rt_feedbacks").append("<li>" + message.from + emoticonImg + ' <span class="msg_body ' +  emoticon + '">"' + message.body +  '"</span></li>');
      var commentBox = '<li><div>';
        commentBox += '<div class="emotion">' + emoticonImg + '</div>';
        commentBox += '<div class="comment-text">';
          commentBox += '<div class="comment-body">' + message.body + '</div>';
          commentBox += '<div class="comment-meta"> feedback by <cite>' + message.from + '</cite> on ' + message.date + '</div>';
        commentBox += '</div>';
      commentBox += '</div></li>';
      $("#rt_feedbacks").prepend(commentBox);
    });
    $('#send_comment').click(function(){
      if(!'#{username}') {
        document.location.href = "/";
      }
      var msg_body = $('#comment').val();
      var msg_emotion = $('#emotion :selected').val();
      if(!msg_body) {
        return;
      }
      socket.send({'type':'publish', 'channel':'#{p_id}', 'msg':{'body':msg_body, 'from':'#{username}', 'emotion':msg_emotion}});
      $("#comment").attr('value', '');
    });
    
    $('.tag').click(function(){
      var emotion = $(this).attr('emotion');
      var list = $("#rt_feedbacks");
      
      $.getJSON('/comments/', {'to':'#{p_id}', 'emotion':emotion}, function(data){
        list.empty();
        $.each(data, function(index, message){
          var emoticon;
          switch(message.emotion) {
            case disText: emoticon='dis'; break;
            case likeText: emoticon='like'; break;
            case queText: emoticon='que'; break;
            default: break;
          }
          // set emoticonImg
          var emoticonImgURL = '/images/' + emoticon + '.gif';
          var emoticonImg = '<img class="emoticon" src="' + emoticonImgURL +'"></a>';
          // add comment
          // list.append("<li>" + message.from + emoticonImg + ' <span class="msg_body ' + emoticon + '">"' + message.body +  '"</span></li>');
          var commentBox = '<li><div>';
            commentBox += '<div class="emotion">' + emoticonImg + '</div>';
            commentBox += '<div class="comment-text">';
              commentBox += '<div class="comment-body">' + message.body + '</div>';
              commentBox += '<div class="comment-meta"> feedback by <cite>' + message.from + '</cite> on ' + message.date + '</div>';
            commentBox += '</div>';
          commentBox += '</div></li>';
          list.append(commentBox);
        });
      });
    });
    
    $('#clear_comment').click(function(){
      $("#rt_feedbacks").empty();
    });
    
    $('#comment').keypress(function(event){
      if(event.which == '13') {
        $('#send_comment').click();
      }
    });
    
  });
div(id='title_bar')
  p #{username}, Let's react to #{title}
div(id="input_bar")
  select(id='emotion')
    option(value='Good') Good
    option(value='!Good') !Good
    option(value='Question', selected=true) Question 
  input(id='comment', name='comment', autocomplete='off', size='50')
  button(id='send_comment') Send
  button(id='clear_comment') Clear
div(id='chat_box')
  ul(id='rt_feedbacks')
  div(id='statics_bar')
    ul
      li 
        span(class='tag dis', emotion='!Good') !Good 
        span(class='between-tag-count') X 
        span(class='tag-count') #{disCount}
      li 
        span(class='tag like', emotion='Good') Good 
        span(class='between-tag-count') X 
        span(class='tag-count') #{likeCount}
      li 
        span(class='tag que', emotion='Question') Question 
        span(class='between-tag-count') X 
        span(class='tag-count') #{queCount}
      li 
        span(class='tag all') 전체 
        span(class='between-tag-count') X 
        span(class='tag-count') #{allCount}
