script(src='/socket.io/socket.io.js')
script(src='/javascripts/jquery-1.6.1.min.js')
script(type='text/javascript')
  $(function(){
    var valOf = {
          uname : '#{username}',
          port  : #{port},
          pId   : '#{p_id}',
          good  : 'Good',
          nG    : '!Good',
          ask   : 'Ask'
        },
        emotionOf = {
          '*'     : {'imgNm':'all' ,'cnt' : #{allCnt}},
          'Good'  : {'imgNm':'good','cnt' : #{goodCnt}},
          '!Good' : {'imgNm':'ng' ,'cnt' : #{ngCnt}},
          'Ask'   : {'imgNm':'ask' ,'cnt' : #{askCnt}},
        },
        worker,commentBoxs,times,
        commentBox =  '<li data-emotion="{{emotion}}" > '+
                      '  <div class="emotion"><img width="50px" height="50px" src="/images/{{imgFileNm}}.png"/></div> '+
                      '  <div class="comment-body"> '+
                      '   <p>{{body}}</p> '+
                      '   <small>by <em>{{from}}</em> on <time data-timestamp="{{date}}">{{timeString}}</time></small> '+
                      '  </div> '+
                      '</li>';
    /* Below there are functions */
    var compileTempl = function(data){
      var templ = commentBox;
      $.each(data,function(key,value){
        templ = templ.replace(new RegExp("\\{\\{" + key + "\\}\\}","gi"),value);
      });
      return templ;
    },
    
    changeTimeString = function(now, createdTimestamp){
      var second = Math.round((now-createdTimestamp)/1000);
      if(second <= 5){
        return 'now';
      }else if(second <= 60){
        return second+' seconds ago';
      }else if(second < (60*60)){
        return Math.floor(second / 60)+' minute'+((Math.floor(second / 60) !== 1)?'s':'')+' ago';
      }else if(second < (24*60*60)){
        return Math.floor(second / (60*60))+' hour'+((Math.floor(second / (60*60)) !== 1)?'s':'')+' ago';
      }else{
        var dateArrs = new Date(createdTimestamp).toGMTString().split(" ");
        return dateArrs[1]+" "+dateArrs[2];
      }
    },
    postMessage = function(){
      if(!worker){
        return false;
      }
      times = [];
      commentBoxs = $('#rt_feedbacks li');
      if(commentBoxs.length > 0){
        $.each(commentBoxs,function(){
          times.push($(this).find('time').data('timestamp'));
        });
      }
      worker.postMessage(times);
    },
    setImageFileName = function(message){
      message.emotion = message.emotion||'*';
      message.imgFileNm = emotionOf[message.emotion].imgNm;
      return message;
    },
    updateEmotionCount = function(message){
      message.emotion = message.emotion||'*';
      emotionOf[message.emotion].cnt += 1;
      $('ul.emotionCnt li > em[data-emotion="'+message.emotion+'"]').html(emotionOf[message.emotion].cnt);
      if(message.emotion !== '*'){
        emotionOf['*'].cnt += 1;
        $('ul.emotionCnt li > em[data-emotion="*"]').html(emotionOf['*'].cnt);  
      }
    };
    
    var socket = new io.Socket(null, {port: valOf.port, rememberTransport:false});
    
    socket.connect();
    socket.send({'type':'subscribe', 'channel':valOf.pId});
    socket.on('message', function(obj){
      var message = setImageFileName(obj.msg),
          currentEmotion = $('ul.tabs li > a.active').data('emotion');
      message.timeString = changeTimeString((+new Date()),message.date);
      updateEmotionCount(message);
      var newComment = $(compileTempl(message));
      if(currentEmotion !== '*' && message.emotion !== currentEmotion){
        newComment.hide();
      }
      $("#rt_feedbacks").prepend(newComment);
    });
    
    $(window).unload(function() {
      socket.send({'type':'unsubscribe', 'channel':valOf.pId});
    });
    
    $('#send_comment').click(function(){
      if(!valOf.uname) {
        document.location.href = "/";
      }
      var msg = {
            'body'    : $.trim($('#comment').val()),
            'emotion' : $('ul.tabs li a.active').data('emotion'),
            'from'    : valOf.uname
          };
      if(!msg.body) {
        return false;
      }

      socket.send({'type':'publish', 'channel':valOf.pId, 'msg':msg});
      $("#comment").val('').focus();
    });
    
   /*
    * input enter event.
    */    
    $('#comment').keydown(function(e){
      if(e.which === 13 || e.which === 10) {
        $('#send_comment').click();
      }
    }).focus();
    
   /*
    * tab click event
    */
    $('ul.tabs li > a').click(function(e){
      e.preventDefault();
      $(this).parents('ul').find('li > a.active').removeClass('active').end().end().addClass('active');
      var emotion = $(this).data('emotion');
      if(emotion === '*'){
        $('#rt_feedbacks li').show();
      }else{
        $('#rt_feedbacks li').hide().filter('li[data-emotion="'+$(this).data('emotion')+'"]').show();
      }
      
      $('#comment').focus();
    });
  
    if (!!window.Worker) {
      worker = new Worker('/javascripts/time-worker.js');      
      worker.onmessage = function(e){
        if(e.data.length > 0 && commentBoxs.length > 0){
          $.each(commentBoxs,function(idx){
            $(this).find('time').html(e.data[idx]);
          });
        }
        postMessage();
      };
    }
    
    (function(){
      $.getJSON('/comments/', {'to':valOf.pId}, function(data){
        $("#rt_feedbacks").empty();
        var now = (+new Date());
        $.each(data, function(index, message){
          message = setImageFileName(message);
          message.timeString = changeTimeString(now,message.date);
          $("#rt_feedbacks").prepend(compileTempl(message));
        });
        postMessage();
      });
    })();
    
  });

div.container.presentation
  div#titleBar
    a(href="/list", class="button") return -1;
    h4 #{username}, Let's react to #{title}
  ul.emotionCnt.clearfix
    li 
      em(data-emotion="*") #{allCnt} 
      label All
    li 
      em(data-emotion="Good") #{goodCnt}
      label Good
    li 
      em(data-emotion="!Good") #{ngCnt} 
      label !Good
    li
      em(data-emotion="Ask") #{askCnt} 
      label Ask
    li.last-child
      em(data-emotion="Users") #{userCount}
      label Users
  ul.tabs
    li  
      a(href="/comments/",class="active", data-emotion="*") 
        strong *
    li  
      a(href="/comments/", data-emotion="Good") Good
    li
      a(href="/comments/", data-emotion="!Good") !Good
    li
      a(href="/comments/", data-emotion="Ask") Ask
  div(id="input_bar")
    input(id='comment', name='comment',type="text", autocomplete='off')
    button(id='send_comment') .push();
  ul(id='rt_feedbacks')
    li.loading
      strong Loading...
  div.footer
    small made by 
      a(href='http://springsprout.org' , target="_blank") springsprout